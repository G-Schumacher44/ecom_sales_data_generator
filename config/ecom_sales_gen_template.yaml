# ------------------------------------------------------------------------------
# ðŸ“¦ ecom_sales_gen_template.yaml
# ------------------------------------------------------------------------------
# This YAML configuration file controls the full synthetic data generation
# pipeline for the e-commerce sales and returns simulator.
#
# It defines:
# - Generator paths to module functions
# - Table schemas and generation logic
# - Controlled vocabularies for realism
# - Messiness injection parameters
# - Channel-specific behavioral rules
#
# ðŸ‘‰ Use this as a teaching template and starting point to build your own
# data generation stories. This template is aligned with `run_data_generation.py`
# and expects a compatible folder structure under `src/`.
#
# For usage:
#   ecomgen --config config/ecom_sales_gen_template.yaml --messiness-level light_mess
# ------------------------------------------------------------------------------

# -------------------- DATA GENERATION FUNCTIONS --------------------
# These are the import paths to Python generator functions. Each maps
# to a table name and should return a list of dictionaries or rows.
row_generators:
  shopping_carts: generators.generator_carts.generate_shopping_carts
  cart_items: generators.generator_carts.generate_cart_items
  orders: generators.generator_orders.generate_orders
  order_items: generators.generator_orders.generate_order_items
  returns: generators.generator_returns.generate_returns
  return_items: generators.generator_returns.generate_return_items
  customers: generators.generator_customers.customer_lookup_generator
  product_catalog: generators.generator_catalog.product_catalog_lookup_generator

output_dir: output

faker_seed: 42

 # -------------------- TABLE SCHEMAS --------------------
 # This section defines each table in the generated dataset.
 #
 # Structure:
 # - `name`: the table's name (used for CSV and SQL export)
 # - `generate`: how many rows to create (if applicable)
 # - `columns`: the schema definition (column name and data type)
 #
 # Special Fields:
 # - `link_to_orders: true`: used for child tables (e.g., order_items, return_items)
 #   that depend on existing orders.
 # - `item_count_range`: specifies how many items to generate per parent row.
 #
 # Common Column Types:
 # - `TEXT`, `INTEGER`, `REAL`, `BOOLEAN`, `DATE`
 # - Some columns accept `options`, `probabilities`, or conditional rules.
 #
 # Purpose:
 # Use this section to control the structure and relationships of your data.
 # You can define parent-child links (orders â†’ order_items), add conditional logic
 # for data integrity, and simulate realistic retail scenarios.
tables:
  - name: customers
    columns:
      - { name: customer_id, type: TEXT }
      - { name: first_name, type: TEXT }
      - { name: last_name, type: TEXT }
      - { name: email, type: TEXT }
      - { name: phone_number, type: TEXT }
      - { name: signup_date, type: DATE }
      - { name: gender, type: TEXT }
      - { name: age, type: INTEGER }
      - { name: is_guest, type: BOOLEAN }
      - { name: customer_status, type: TEXT, options: ["Active", "Inactive"], probabilities: [0.9, 0.1] }
      - { name: signup_channel, type: TEXT }
      - { name: loyalty_tier, type: TEXT, options: ["Bronze", "Silver", "Gold", "Platinum"] }
      - { name: initial_loyalty_tier, type: TEXT } # NEW: The tier assigned at signup, before any spend.
      - { name: email_verified, type: BOOLEAN }
      - { name: marketing_opt_in, type: BOOLEAN }
      - { name: mailing_address, type: TEXT }
      - { name: billing_address, type: TEXT }
      - { name: loyalty_enrollment_date, type: DATE }
      - { name: clv_bucket, type: TEXT }

  - name: product_catalog
    columns:
      - { name: product_id, type: INTEGER }
      - { name: product_name, type: TEXT }
      - { name: category, type: TEXT }
      - { name: unit_price, type: REAL }
      - { name: cost_price, type: REAL } # NEW: The cost of the product for COGS analysis.
      - { name: inventory_quantity, type: INTEGER }

  - name: shopping_carts
    generate: 40000 # Represents initial traffic volume, which is higher than the customer base.
    columns:
      - { name: cart_id, type: TEXT }
      - { name: customer_id, type: TEXT }
      - { name: created_at, type: DATE }
      - { name: updated_at, type: DATE } # NEW: Tracks last cart activity
      - { name: cart_total, type: REAL }
      - { name: status, type: TEXT } # open, converted, abandoned, emptied

  - name: cart_items
    item_count_range: [1, 8]
    columns:
      - { name: cart_item_id, type: INTEGER }
      - { name: cart_id, type: TEXT }
      - { name: product_id, type: INTEGER }
      - { name: product_name, type: TEXT }
      - { name: category, type: TEXT }
      - { name: added_at, type: DATE } # NEW: Tracks when item was added
      - { name: quantity, type: INTEGER }
      - { name: unit_price, type: REAL }

  - name: orders
    # The 'generate' key is now ignored for orders. The number of orders is
    # determined by the number of converted shopping carts.
    columns:
      - name: order_id
        type: TEXT
      - name: total_items
        type: INTEGER
      - name: order_date
        type: DATE
      - name: customer_id
        type: TEXT
      - name: email
        type: TEXT
      - name: order_channel
        type: TEXT
      - name: is_expedited
        type: BOOLEAN
      - name: customer_tier
        type: TEXT
      - name: gross_total # NEW: The total before discounts.
        type: REAL
      - name: net_total # NEW: The final total after discounts.
        type: REAL
      - name: total_discount_amount # NEW: The total discount applied to the order.
        type: REAL
      - name: payment_method
        type: TEXT
      - name: shipping_speed
        type: TEXT
      - name: shipping_cost
        type: REAL
      - name: agent_id
        type: TEXT
      - name: actual_shipping_cost # NEW: The business's actual cost to ship.
        type: REAL
      - name: payment_processing_fee # NEW: The fee paid to the payment processor.
        type: TEXT
      - name: shipping_address
        type: TEXT
      - name: billing_address
        type: TEXT
      - name: clv_bucket
        type: TEXT
      - name: is_reactivated # NEW
        type: BOOLEAN

  - name: order_items # Derived from cart_items of converted carts
    link_to_orders: true    # Dynamically generates N items per existing order
    # NOTE: The 'item_count_range' here is ignored. The number of order_items is
    # determined by the items in the original, converted shopping_cart.
    columns:
      - name: order_id
        type: TEXT
      - name: product_id
        type: INTEGER
      - name: product_name
        type: TEXT
      - name: category
        type: TEXT
      - name: quantity
        type: INTEGER
      - name: unit_price
        type: REAL
      - name: discount_amount # NEW: The discount applied to this line item.
        type: REAL
      - name: cost_price # NEW: The cost of the product at the time of sale.
        type: REAL

  - name: returns
    # The 'generate' key is now ignored. The number of returns is determined
    # by the number of orders and the configured return_rate.
    columns:
      - name: return_id
        type: TEXT
      - name: order_id
        type: TEXT
      - name: customer_id
        type: TEXT
      - name: email
        type: TEXT
      - name: return_date
        type: DATE
      - name: reason
        type: TEXT
      - name: return_type
        type: TEXT
      - name: refunded_amount
        type: REAL
      - name: return_channel
        type: TEXT
      - name: agent_id
        type: TEXT
      - name: refund_method 
        type: TEXT

  - name: return_items
    columns:
      - name: return_item_id
        type: INTEGER
      - name: return_id
        type: TEXT
      - name: order_id
        type: TEXT
      - name: product_id
        type: INTEGER
      - name: product_name
        type: TEXT
      - name: category
        type: TEXT 
      - name: quantity_returned
        type: INTEGER
      - name: unit_price
        type: REAL
      - name: cost_price # NEW: The cost of the product at the time of sale.
        type: REAL
      - name: refunded_amount
        type: REAL

# -------------------- LOOKUP TABLE CONFIG --------------------
# Optional generators for controlled vocab tables like customers or products.
# These are cached and reused across dependent tables.
lookup_config:
  product_catalog:
    num_products: 1286
    min_price: 5.0
    max_price: 250.0
    cost_price_margin_range: [0.4, 0.7] # NEW: Product cost is 40-70% of its unit price.
    min_inventory_quantity: 100
    max_inventory_quantity: 250
    generator: generators.generator_catalog.generate_product_catalog
  customers:
    num_customers: 10000 # Scaled down for a first-year retailer scenario.
    min_age: 18
    max_age: 70
    gender_unknown_prob: 0.05
    guest_shopper_pct: 0.4
    generator: generators.generator_customers.generate_customers


# -------------------- VOCABULARY AND PARAMETERS SECTION --------------------
# These control value distributions for categorical fields and realism factors.
vocab:
  category_vocab:
    electronics:
      adjectives:
        - Wireless
        - Compact
        - Smart
        - Portable
      nouns:
        - Speaker
        - Headphones
        - Camera
        - Monitor
    clothing:
      adjectives:
        - Comfortable
        - Stylish
        - Classic
        - Durable
      nouns:
        - Jacket
        - Jeans
        - Sweater
        - Shirt
    books:
      adjectives:
        - Illustrated
        - Hardcover
        - Classic
        - Modern
      nouns:
        - Novel
        - Guide
        - Anthology
        - Memoir
    home:
      adjectives:
        - Elegant
        - Rustic
        - Cozy
        - Modern
      nouns:
        - Lamp
        - Rug
        - Chair
        - Table
    toys:
      adjectives:
        - Fun
        - Educational
        - Colorful
        - Interactive
      nouns:
        - Puzzle
        - Doll
        - Blocks
        - Car
  regions:
    - North
    - South
    - East
    - West
    - Central

  payment_methods:
    - Credit Card
    - PayPal
    - Apple Pay
    - Google Pay
    - ACH
    - Ebay
    - NewEgg

  customer_tiers:
    - Bronze
    - Silver
    - Gold
    - Platinum

  shipping_speeds:
    - Standard
    - Two-Day
    - Overnight

  return_reasons:
    - Defective
    - Wrong item
    - Arrived damaged
    - Product did not match description
    - Found a better price
    - Item arrived late
    - No longer needed
    - Damaged in transit
    - Changed mind

  order_channels:
    - Web
    - Phone
    - Social Media
    - Ebay
    - NewEgg


  return_channels:
    - Web
    - Phone
    - Social Media
    - Ebay
    - NewEgg

  categories:
    - Electronics
    - Clothing
    - Books
    - Home
    - Toys

  genders:
    - Male
    - Female
    - Unknown

  signup_channels:
    - Website
    - Phone
    - email
    - Social Media

  loyalty_tiers:
    - Bronze
    - Silver
    - Gold
    - Platinum

  clv_buckets:
    - Low
    - Medium
    - High

  agent_pool:
    enabled: true
    agents:
      - id: CSR-0001
        name: Alice Johnson
      - id: CSR-0002
        name: Bob Smith
      - id: CSR-0003
        name: Carol Davis
      - id: CSR-0004
        name: David Lee
      - id: CSR-0005
        name: Eva Martinez
      - id: CSR-0006
        name: Frank Wilson
      - id: CSR-0007
        name: Grace Kim
      - id: CSR-0008
        name: Henry Clark
      - id: CSR-0009
        name: Irene Lopez
      - id: CSR-0010
        name: Jack Turner
      - id: CSR-0011
        name: Karen Evans
      - id: CSR-0012
        name: Larry Scott
      - id: CSR-0013
        name: Monica White
      - id: CSR-0014
        name: Nathan Young
      - id: CSR-0015
        name: Olivia King
      - id: CSR-0016
        name: Paul Green
      - id: CSR-0017
        name: Queenie Harris
      - id: CSR-0018
        name: Robert Adams
      - id: CSR-0019
        name: Susan Baker
      - id: CSR-0020
        name: Tom Nelson

# -------------------- GLOBAL PARAMETERS --------------------
# These affect core generator logic: signup timelines, distributions,
# shipping rules, return biases, etc.
parameters:
  signup_years: 1 # Controls the historical depth of customer signups. Aligns with 1-year of order history.
  expedited_pct: 20
  gender_unknown_prob: 5
  order_days_back: 365
  conversion_rate: 0.12 # A healthier, more realistic conversion rate.
  # NEW: Controls how quickly a new registered customer makes their first visit.
  time_to_first_cart_days_range: [1, 14]
  # NEW: Boosts conversion rate for a customer's first purchase based on their signup channel.
  first_purchase_conversion_boost:
    Phone: 1.5  # 50% more likely to convert on first purchase
    email: 1.3  # 30% more likely
    Website: 1.1 # 10% more likely
  # NEW: Settings to control repeat purchase behavior for cohort analysis
  repeat_purchase_settings:
    # NOTE: These values represent the AVERAGE NUMBER of repeat VISITS (lambda for a Poisson distribution).
    # The final repeat PURCHASE rate is a function of these visit rates AND the global `conversion_rate`.
    # NEW: Nested structure to create distinct behavior by signup channel and tier.
    propensity_by_channel_and_tier:
      Website:
        Platinum: 4.8
        Gold: 3.5
        Silver: 2.4
        Bronze: 1.2
        default: 0.6
      Phone: # Higher retention for high-touch channel
        Platinum: 5.2
        Gold: 4.0
        Silver: 2.8
        Bronze: 1.5
        default: 0.7
      'Social Media': # Lower retention for impulse channel
        Platinum: 4.0
        Gold: 3.0
        Silver: 2.0
        Bronze: 1.0
        default: 0.5
      default: # Fallback for email, etc.
        Platinum: 4.5
        Gold: 3.3
        Silver: 2.2
        Bronze: 1.1
        default: 0.6
    # NEW: Wider, channel-specific time delays for more variance.
    time_delay_by_channel_and_tier:
      # Structure is now { range: [min, max], sigma: value }
      # Higher sigma creates more variance and heavier tails.
      Website:
        Platinum: { range: [10, 45], sigma: 0.5 }
        Gold: { range: [15, 60], sigma: 0.6 }
        Silver: { range: [20, 90], sigma: 0.7 }
        Bronze: { range: [30, 120], sigma: 0.8 }
        default: { range: [30, 150], sigma: 0.8 }
      Phone:
        Platinum: { range: [10, 40], sigma: 0.5 }
        Gold: { range: [15, 50], sigma: 0.55 }
        Silver: { range: [20, 75], sigma: 0.6 }
        Bronze: { range: [25, 100], sigma: 0.65 }
        default: { range: [30, 120], sigma: 0.7 }
      'Social Media':
        Platinum: { range: [15, 90], sigma: 0.8 }
        Gold: { range: [20, 120], sigma: 0.9 }
        Silver: { range: [30, 150], sigma: 1.0 }
        Bronze: { range: [45, 180], sigma: 1.1 }
        default: { range: [45, 200], sigma: 1.2 }
      default:
        Platinum: { range: [10, 60], sigma: 0.6 }
        Gold: { range: [15, 75], sigma: 0.7 }
        Silver: { range: [20, 100], sigma: 0.8 }
        Bronze: { range: [30, 130], sigma: 0.9 }
        default: { range: [30, 180], sigma: 1.0 }
  # NEW: Stratify cart size and item quantity by tier to create sharper CLV distribution.
  # Increased stratification between tiers.
  cart_behavior_by_tier:
    Platinum:
      item_count_range: [4, 15]
      quantity_range: [1, 6]
    Gold:
      item_count_range: [2, 10]
      quantity_range: [1, 5]
    Silver:
      item_count_range: [1, 8]
      quantity_range: [1, 3]
    Bronze:
      item_count_range: [1, 6]
      quantity_range: [1, 2]
    default: # For guests and no-tier customers
      item_count_range: [1, 5]
      quantity_range: [1, 2]
  # NEW: Controls refund behavior based on the reason for the return.
  refund_behavior_by_reason:
    "Defective": { full_return_prob: 0.9, partial_quantity_prob: 0.1 }
    "Arrived damaged": { full_return_prob: 0.95, partial_quantity_prob: 0.05 }
    "Wrong item": { full_return_prob: 0.8, partial_quantity_prob: 0.2 }
    "Product did not match description": { full_return_prob: 0.7, partial_quantity_prob: 0.3 }
    "Changed mind": { full_return_prob: 0.2, partial_quantity_prob: 0.6 }
    "No longer needed": { full_return_prob: 0.1, partial_quantity_prob: 0.5 }
    default: { full_return_prob: 0.5, partial_quantity_prob: 0.4 }
  # NEW: Controls the timing distribution for returns to create a long tail.
  # Each entry is [max_days, cumulative_probability].
  return_timing_distribution:
    - [30, 0.80]  # 80% of returns happen within 30 days
    - [90, 0.95]  # An additional 15% happen between 31-90 days
    - [365, 1.0] # The final 5% happen between 91-365 days
  # NEW: Probability that an order with one return will have a second, separate return event.
  multi_return_probability: 0.15
  # NEW: Simulates external shocks affecting cohort retention.
  # Key is 'YYYY-MM', value is a multiplier for repeat visit propensity.
  # < 1.0 simulates churn, > 1.0 simulates re-engagement.
  retention_shocks:
    '2024-03': 0.5  # 50% churn shock for March signups
    '2024-05': 1.8  # 80% re-engagement boost for May signups
  # Tiers are now "earned" based on cumulative spend. This replaces random evolution.
  tier_spend_thresholds:
    Platinum: 1000
    Gold: 500
    Silver: 100
    Bronze: 0
  # NEW: CLV buckets are also "earned" based on cumulative spend.
  clv_spend_thresholds:
    High: 750
    Medium: 250
    Low: 0
  # NEW: Adds seasonal spikes to cart generation.
  # The value is a multiplier for cart volume in that month.
  seasonal_factors:
    7: 1.2  # Summer sale
    11: 1.6 # Black Friday
    12: 2.1 # Holiday rush
  # NEW: Simulates long-term customer reactivation.
  reactivation_settings:
    probability: 0.08 # 8% of customers will have a reactivation event.
    delay_days_range: [200, 400] # The gap before they return.
  # NEW: The probability that an abandoned cart will be "emptied" (total set to 0) vs. left full.
  abandoned_cart_emptied_prob: 0.15
  # NEW: Varies the base return rate by the customer's original signup channel.
  return_rate_by_signup_channel:
    'Social Media': 0.35 # Higher returns from impulse buys
    Website: 0.25
    Phone: 0.15 # Lower returns from high-touch sales
    email: 0.20
  # NEW: Skews product category preference by signup channel.
  category_preference_by_signup_channel:
    'Social Media': { electronics: 3.0, toys: 2.0, clothing: 1.5 } # Push gadgets
    Website: { home: 2.0, books: 1.5 } # Lifestyle focus
    Phone: { home: 2.5, electronics: 1.5 } # Higher-ticket items
  # NEW: Parameters for financial analysis.
  financials:
    # NEW: More detailed model for the business's actual shipping costs.
    shipping_business_costs:
      # The base cost to the business for each shipping speed.
      base_costs:
        Standard: 4.50
        Two-Day: 38.00
        Overnight: 70.00
      # The random variance applied to the base cost (e.g., due to weight, zone).
      # [-0.15, 0.10] means the final cost can be 15% lower to 10% higher than the base.
      cost_variance_pct: [-0.15, 0.10]
    # Defines the fee rate for each payment processor.
    payment_fee_rates:
      "Credit Card": 0.025 # 2.5%
      "PayPal": 0.03
      "Apple Pay": 0.02
      "Google Pay": 0.02
      "ACH": 0.01
      "Ebay": 0.035
      "NewEgg": 0.035
  return_rate: 0.25 # NEW: Generate returns for 25% of all orders.
  no_tier_probability: 0.1 # 10% of new customers will not have a loyalty tier
  # NEW: Distribution of signups by channel, to create more realistic acquisition funnels.
  signup_channel_distribution:
    Website: 0.55
    email: 0.20
    'Social Media': 0.15
    Phone: 0.10
  # Distribution of orders by channel, balanced to encourage more channel switching.
  order_channel_distribution:
    Web: 0.45
    Phone: 0.20
    Social Media: 0.15
    Ebay: 0.15
    NewEgg: 0.05
  shipping_speed_distribution:
    Standard: 0.65
    Two-Day: 0.20
    Overnight: 0.15
  shipping_costs:
    Standard: 5.0
    Two-Day: 45.0
    Overnight: 80.0
  # NEW: Settings for applying discounts to order items.
  discount_settings:
    probability: 0.20 # 20% of order items will have a discount.
    range_pct: [0.05, 0.25] # Discount will be between 5% and 25% of the item's price.

  global_payment_method_distribution: # NEW: Default payment method distribution for channels without specific rules
    Credit Card: 0.60
    PayPal: 0.20
    Apple Pay: 0.10
    Google Pay: 0.05
    ACH: 0.05
    Cash: 0.00 # Add if you plan to simulate cash payments for In-Store or other channels
    Ebay: 0.00 # Set to 0 if only used for specific channel rules
    NewEgg: 0.00 # Set to 0 if only used for specific channel rules

  # NEW: Defines the probability distribution of loyalty tiers for each signup channel.
  # The list corresponds to [Bronze, Silver, Gold, Platinum].
  loyalty_distribution_by_channel:
    Website: [0.4, 0.3, 0.2, 0.1] # Skews lower value
    Phone: [0.2, 0.3, 0.3, 0.2]   # Skews higher value (e.g., high-touch sales)
    email: [0.3, 0.4, 0.2, 0.1]   # Skews mid-range
    'Social Media': [0.5, 0.3, 0.15, 0.05] # Skews very low value (e.g., impulse signups)
    default: [0.4, 0.3, 0.2, 0.1] # Fallback distribution

# -------------------- CHANNEL-SPECIFIC RULES --------------------
# Overrides by order_channel. You can define allowed payment methods
# and preferred return channels per channel (e.g., eBay, Web).
channel_rules: #
  # Rules for each order_channel
  Web:
    allowed_payment_methods: ["Credit Card", "ACH", "PayPal", "Apple Pay", "Google Pay"]
    return_channel_preference: "Web" # Orders from Web prefer returns via Web
  Phone:
    allowed_payment_methods: ["Credit Card", "ACH"] # Phone is constrained
    return_channel_preference: "Phone" # Orders from Phone prefer returns via Phone
  Social Media:
    # Use global_payment_method_distribution
    allowed_payment_methods: ["Credit Card", "PayPal", "Apple Pay", "Google Pay"]
    return_channel_preference: "Social Media"
  Ebay:
    allowed_payment_methods: ["Ebay"] # eBay is tightly coupled with PayPal.
    return_channel_preference: "Ebay" # Returns typically via eBay.
  NewEgg:
    allowed_payment_methods: ["NewEgg"] # Assuming NewEgg has its own payment type
    return_channel_preference: "NewEgg" # Returns typically via NewEgg platform
